How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me to see the bug that was introduced by reducing the amount of text that I had to search for differences. Instead of having to look in hundreds of lines of text, I only had to search in around 7.

--sestens

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

By being able to go back to an earlier version if something goes amiss. Another way it could make me more efficient is by analyzing the changes in the program to see which version is faster or better. 

--sestens

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros:greater control, not an excessive amount of commits
Cons:can be very big changes if not saving frequently, forget to save

--sestens

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because when developing software, there are often many files involved in one project. Systems like docs are not meant for handling software projects. 

--sestens

How can you use the commands git log and git diff to view the history of files?

By using git log, I can see the recent commits a project as undergone. To compare two files I can use git diff and then their ids (in git log) to see their differences.

--sestens

How might using version control make you more confident to make changes that could break something?

Because it is easy to go back to a previous version if something goes wrong.

--sestens

Now that you have your workspace set up, what do you want to try using Git for?

I will try to use it for my future personal projects. Maybe later I will use it in my career too.

--sestens